<html>
<head>
    <title>Sys Watch - CIS 6930</title>
    <script src="/jquery-2.1.4.min.js" type="text/javascript"></script>
    <script src="/jquery-ui.min.js"></script>
    <script src="/d3.v3.min.js" type="text/javascript"></script>
    <script src="/rickshaw.min.js" type="text/javascript"></script>
    <script src="/bootstrap.min.js" type="text/javascript"></script>
    <script src="/index.js" type="text/javascript"></script>
    
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192"  href="/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">

    <link href="/rickshaw.min.css" media="screen" rel="stylesheet" type="text/css">
    <link href="/bootstrap.min.css" media="screen" rel="stylesheet" type="text/css">
    <!--<meta http-equiv="refresh" content="120">--> <!--Refresh page every 120 seconds-->

    <script type="text/javascript">
        //Set this parameter to empty string when running in windows or
        var win_prefix = navigator.platform == null ? '' : navigator.platform.toString().includes('Win') ? 'win_' : '';
    </script>
    <style>
        .chart_container {
            position: relative;
            display: inline-block;
            /*font-family: Arial, Helvetica, sans-serif;*/
            /*margin-top: 20px;*/
        }
        .chart {
            /*position: absolute;*/
            display: inline-block;
            left: 50px;
        }
        .y_axis {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 50px;
        }
        .y_axis > svg {
            padding-bottom: 20px;
        }
        .x_tick {
            bottom: -20px !important;
        }
        .legend {
            display: inline-block;
            vertical-align: top;
            margin: 0 0 0 10px;
        }
        .gap {
            margin-top: 15px;
            margin-bottom: 15px;
        }
        .slider_title {
            margin-top: 40px;
        }
        .slider_gap {
            margin-top: 20px;
            margin-left: 50px;
        }

    </style>

</head>
<body>
<nav class="navbar navbar-inverse">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/">Influx-SysWatch</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">
        <li class="cpu-tab"><a href="/">CPU</a></li>
        <li class="mem-tab"><a href="/mem">Memory</a></li>
        <li class="disk-tab"><a href="/disk">Disk</a></li>
        <li class="proc-tab"><a href="/proc">Process</a></li>
        <!--<li><a href="/net">Network</a></li>-->
        <li class="netstat-tab"><a href="/netstat">NetStat</a></li>
        <li class="holt-tab"><a href="/holt">Predictor</a></li>
        <li class="alerts-tab"><a href="/alerts">Alerts</a></li>
      </ul>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
<div class="container">
<div class="dropdown" id="timeRangeDiv">
  <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
    Time Range
    <span class="caret"></span>
  </button>
  <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
    <li><a href="#" onclick="addTimeRange('1h')">Past 1h</a></li>
    <li><a href="#" onclick="addTimeRange('2h')">Past 2h</a></li>
    <li><a href="#" onclick="addTimeRange('6h')">Past 6h</a></li>
    <li><a href="#" onclick="addTimeRange('12h')">Past 12h</a></li>
    <li><a href="#" onclick="addTimeRange('24h')">Past 24h</a></li>
    <li><a href="#" onclick="addTimeRange('48h')">Past 48h</a></li>
  </ul>
</div>
<%= yield %>
</div>

<script type="text/javascript">
var groupTime = '10s';

var timeRange = "<%= params['timeRange']%>";
if((timeRange == null) || (timeRange.length == 0)) {
    timeRange = '1h';
}

function addTimeRange(timeRange) {
    location.href = appendToQueryString('timeRange', timeRange)
}

function appendToQueryString(param, val) {
    var queryString = window.location.search.replace("?", "");
    var parameterListRaw = queryString == "" ? [] : queryString.split("&");
    var parameterList = {};
    for (var i = 0; i < parameterListRaw.length; i++) {
        var parameter = parameterListRaw[i].split("=");
        parameterList[parameter[0]] = parameter[1];
    }
    parameterList[param] = val;

    var newQueryString = "?";
    for (var item in parameterList) {
        if (parameterList.hasOwnProperty(item)) {
            newQueryString += item + "=" + parameterList[item] + "&";
        }
    }
    newQueryString = newQueryString.replace(/&$/, "");
    return location.origin + location.pathname + newQueryString;
}

function hideTimeRange() {
    var holtIndex = window.location.href.search('/holt');
    var alertsIndex = window.location.href.search('/alerts');

    return (holtIndex > 0) || (alertsIndex > 0);
}

if(hideTimeRange()) {
    $('#timeRangeDiv').hide();
} else {
    $('#timeRangeDiv').show();
}

</script>
</body>
</html>
